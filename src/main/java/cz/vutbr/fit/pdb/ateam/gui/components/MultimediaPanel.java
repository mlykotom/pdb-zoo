package cz.vutbr.fit.pdb.ateam.gui.components;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import cz.vutbr.fit.pdb.ateam.controller.AnimalsTabController;
import cz.vutbr.fit.pdb.ateam.model.animal.AnimalModel;
import cz.vutbr.fit.pdb.ateam.utils.Logger;
import cz.vutbr.fit.pdb.ateam.utils.Utils;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.SQLException;

/**
 * Created by Jakub on 02.12.2015.
 */
public class MultimediaPanel extends JPanel {
	private static final int IMAGE_WIDTH = 200;
	private static final int IMAGE_HEIGHT = 200;

	private JPanel multimediaPanel;
	private JButton saveImageButton;
	private JButton openFileButton;
	private JPanel imagePanelParent;
	private ImagePanel imagePanel;
	private JButton mirrorButton;
	private JTextField idTextField;
	private JButton loadButton;
	private JButton compareButton;
	private JFileChooser fileChooser;

	private AnimalModel model;

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	public MultimediaPanel(final AnimalsTabController controller) {
		add(multimediaPanel);

		fileChooser = new JFileChooser();

		Utils.setComponentFixSize(imagePanelParent, IMAGE_WIDTH, IMAGE_HEIGHT);

		imagePanel = new ImagePanel(imagePanelParent);
		Utils.changePanelContent(imagePanelParent, imagePanel);

		// BUTTONS -----------------------------------------------------------------

		openFileButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				int returnVal = fileChooser.showOpenDialog(multimediaPanel);

				if (returnVal == JFileChooser.APPROVE_OPTION) {
					File file = fileChooser.getSelectedFile();
					controller.openFileAction(file);
				}
			}
		});

		mirrorButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				controller.mirrorImageAction();
			}
		});

//		saveImageButton.addActionListener(new ActionListener() {
//			@Override
//			public void actionPerformed(ActionEvent e) {
//				try {
//					byte[] bytes = imagePanel.getByteArray();
//					if (bytes == null) {
//						// TODO open something first ERROR MESSAGE
//						return;
//					}
//
////					if (model == null) {
////						model = new ImageModel(0, "<<new>>");
////					}
//
//					model.setImageByteArray(bytes);
//					model.setIsChanged(true);
//					DataManager.getInstance().saveModel(model);
//				} catch (DataManagerException e1) {
//					Logger.createLog(Logger.ERROR_LOG, e1.getMessage());
//				}
//			}
//		});

//		loadButton.addActionListener(new ActionListener() {
//			@Override
//			public void actionPerformed(ActionEvent e) {
//				try {
//					if (idTextField.getText() == null) return;
//
//					Long id = Long.parseLong(idTextField.getText());
//					model = DataManager.getInstance().getAnimal(id);
//					changeImagePanelContent(model);
//				} catch (DataManagerException e1) {
//					Logger.createLog(Logger.ERROR_LOG, e1.getMessage());
//				}
//			}
//		});

		compareButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				controller.compareImageAction();
			}
		});
	}

	public void setImage(AnimalModel model) {
		changeImagePanelContent(model);
	}

	public void changeImagePanelContent(Object obj) {
		try {
			if (obj instanceof AnimalModel && ((AnimalModel) obj).getImage() != null)
				imagePanel.changeImage(((AnimalModel) obj).getImage().getDataInStream());
			else if (obj instanceof File)
				imagePanel.changeImage((File) obj);
		} catch (SQLException e) {
			Logger.createLog(Logger.ERROR_LOG, "SQLException: " + e.getMessage());
		}
	}

	public byte[] getImageByteArray() {
		return imagePanel.getByteArray();
	}

	public ImagePanel getImagePanel() {
		return imagePanel;
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		multimediaPanel = new JPanel();
		multimediaPanel.setLayout(new GridLayoutManager(8, 2, new Insets(15, 15, 15, 15), -1, -1));
		imagePanelParent = new JPanel();
		imagePanelParent.setLayout(new CardLayout(0, 0));
		imagePanelParent.setBackground(new Color(-1114881));
		imagePanelParent.setForeground(new Color(-1));
		multimediaPanel.add(imagePanelParent, new GridConstraints(0, 0, 5, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		imagePanelParent.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, new Color(-16777216)));
		openFileButton = new JButton();
		openFileButton.setText("Open");
		multimediaPanel.add(openFileButton, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		mirrorButton = new JButton();
		mirrorButton.setText("Mirror and Save Image");
		multimediaPanel.add(mirrorButton, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		compareButton = new JButton();
		compareButton.setText("Compare");
		multimediaPanel.add(compareButton, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return multimediaPanel;
	}
}
